{"data":{"site":{"siteMetadata":{"title":"iamprettydamn.cool","author":"Alex Garcia"}},"mdx":{"id":"a7ecf201-3bcc-53d8-abea-dfef051e029b","excerpt":"Importing other markdown files are easy too - this paragraph is another markdown file, imported with:","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Importing other markdown files are easy too - this paragraph is another markdown file, imported with:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {}\n    }, `import SubPage from \"./subpage.mdx\"\n<SubPage/>\n`)));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"","date":null}}},"pageContext":{"slug":"/2019/sup/subpage/","previous":{"id":"ce67739c-2608-552c-bc30-ce6630b05f04","tableOfContents":{"items":[{"url":"#resources","title":"resources","items":[{"url":"#5-use-racist-data","title":"#5 Use racist data"},{"url":"#4-use-non-diverse-data","title":"#4 Use non-diverse data"},{"url":"#3-accidentally","title":"#3 Accidentally"},{"url":"#2-use-black-bloxes","title":"#2 Use black bloxes"},{"url":"#1-think-that-code-cant-have-bias","title":"#1 Think that code can't have bias"},{"url":"#random-questions","title":"Random questions"}]}]},"parent":{"absolutePath":"/home/alexsebastiangarcia/projects/blogX/content/blog/2019/racist-code/index.mdx","name":"index","sourceInstanceName":"blog"},"fields":{"slug":"/2019/racist-code/"},"frontmatter":{"title":"5 ways to write racist code","date":"2019-03-08T22:40:42.046Z"},"fileAbsolutePath":"/home/alexsebastiangarcia/projects/blogX/content/blog/2019/racist-code/index.mdx"},"next":null,"absPath":"/home/alexsebastiangarcia/projects/blogX/content/blog/2019/sup/subpage.mdx","tableOfContents":{},"id":"a7ecf201-3bcc-53d8-abea-dfef051e029b"}}